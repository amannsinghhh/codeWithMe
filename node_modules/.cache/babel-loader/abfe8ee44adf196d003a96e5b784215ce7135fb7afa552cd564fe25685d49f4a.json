{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from '@codemirror/lang-javascript';\nimport { EditorState } from '@codemirror/state';\nimport axios from \"axios\";\nimport ACTIONS from \"../action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  socketRef,\n  roomID,\n  onCodeChange\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const [code, setCode] = useState(\"console.log('Start Writing!');\");\n  const [output, setOutput] = useState(\"\");\n  const runCode = async () => {\n    try {\n      setOutput(\"Running...\");\n      const response = await axios.post(\"https://runkit.io/api/run/1.0.0\", {\n        code\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setOutput(response.data);\n      editorRef.current.on('change', (instance, changes) => {\n        console.log('changes', changes);\n        const {\n          origin\n        } = changes;\n        const code = instance.getValue();\n        onCodeChange(code);\n        if (origin !== 'setValue') {\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomID,\n            code\n          });\n        }\n      });\n    } catch (error) {\n      setOutput(\"Error: \" + error.message);\n    }\n  };\n  useEffect(() => {\n    if (socketRef.current) {\n      socketRef.current.on(ACTIONS.CODE_CHANGE, ({\n        code\n      }) => {\n        if (code !== null) {\n          editorRef.current.editor.setValue(code); // Update the editor content\n        }\n      });\n    }\n  }, [socketRef.current]);\n  useEffect(() => {\n    const instance = editorRef.current.editor;\n    const handleChange = (instance, changes) => {\n      const {\n        origin\n      } = changes;\n      const code = instance.getValue();\n      onCodeChange(code);\n      if (origin !== 'setValue' && socketRef.current) {\n        socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n          roomID,\n          code\n        });\n      }\n    };\n    instance.on('change', handleChange);\n    return () => {\n      instance.off('change', handleChange);\n    };\n  }, [socketRef.current, onCodeChange, roomID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CodeMirror, {\n      ref: editorRef // Assign the ref here\n      ,\n      value: code,\n      height: \"650px\",\n      theme: vscodeDark,\n      options: {\n        mode: {\n          name: javascript(),\n          json: true\n        },\n        theme: 'material',\n        lineNumbers: true,\n        autocompletion: true,\n        autocloseBrackets: true\n      },\n      onChange: (editor, data, value) => {\n        setCode(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn runbtn\",\n      onClick: runCode,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"outputtxt\",\n      children: \"Output:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(Editor, \"bvlNUWtXOqdsCB0a5Q3zldXWn7o=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","CodeMirror","autocompletion","closeBrackets","closeBracketsKeymap","completionKeymap","vscodeDark","javascript","EditorState","axios","ACTIONS","jsxDEV","_jsxDEV","Editor","socketRef","roomID","onCodeChange","_s","editorRef","code","setCode","output","setOutput","runCode","response","post","headers","data","current","on","instance","changes","console","log","origin","getValue","emit","CODE_CHANGE","error","message","editor","setValue","handleChange","off","children","ref","value","height","theme","options","mode","name","json","lineNumbers","autocloseBrackets","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete'\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from '@codemirror/lang-javascript';\nimport { EditorState } from '@codemirror/state';\nimport axios from \"axios\";\nimport ACTIONS from \"../action\";\n\n\nconst Editor = ({ socketRef, roomID, onCodeChange }) => {\n    const editorRef = useRef(null);\n    const [code, setCode] = useState(\"console.log('Start Writing!');\");\n    const [output, setOutput] = useState(\"\");\n\n    const runCode = async () => {\n        try {\n            setOutput(\"Running...\");\n\n            const response = await axios.post(\n                \"https://runkit.io/api/run/1.0.0\",\n                { code },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n            setOutput(response.data);\n\n            editorRef.current.on('change', (instance, changes) => {\n                console.log('changes', changes)\n                const { origin } = changes;\n                const code = instance.getValue();\n                onCodeChange(code)\n                if (origin !== 'setValue') {\n                    socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                        roomID,\n                        code,\n                    });\n                }\n            });\n        } catch (error) {\n            setOutput(\"Error: \" + error.message);\n        }\n    };\n    useEffect(() => {\n        if (socketRef.current) {\n            socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n                if (code !== null) {\n                    editorRef.current.editor.setValue(code); // Update the editor content\n                }\n            });\n        }\n    }, [socketRef.current]);\n\n    useEffect(() => {\n        const instance = editorRef.current.editor;\n\n        const handleChange = (instance, changes) => {\n            const { origin } = changes;\n            const code = instance.getValue();\n            onCodeChange(code);\n\n            if (origin !== 'setValue' && socketRef.current) {\n                socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                    roomID,\n                    code,\n                });\n            }\n        };\n\n        instance.on('change', handleChange);\n\n        return () => {\n            instance.off('change', handleChange);\n        };\n    }, [socketRef.current, onCodeChange, roomID]);\n\n\n\n    return (\n        <div>\n            <CodeMirror\n                ref={editorRef} // Assign the ref here\n                value={code}\n                height=\"650px\"\n                theme={vscodeDark}\n                options={{\n                    mode: { name: javascript(), json: true },\n                    theme: 'material',\n                    lineNumbers: true,\n                    autocompletion: true,\n                    autocloseBrackets: true,\n\n                }}\n                onChange={(editor, data, value) => {\n                    setCode(value);\n                }}\n            />\n            <button className=\"btn runbtn\" onClick={runCode}>Run</button>\n            <h2 className=\"outputtxt\">Output:</h2>\n            <pre>{output}</pre>\n        </div>\n    );\n};\n\nexport default Editor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}