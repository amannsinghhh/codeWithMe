{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { EditorState, basicSetup } from '@codemirror/state';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { highlightActiveLine, drawSelection, bracketMatching, syntaxHighlighting, closeBrackets, highlightSpecialChars, autocompletion, indentOnInput } from '@codemirror/language';\n\n// Import CodeMirror styles\nimport 'codemirror/lib/codemirror.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = () => {\n  _s();\n  const initialCode = 'console.log(\"Hello, CodeMirror!\");';\n  const [code, setCode] = useState(initialCode);\n  const editorState = EditorState.create({\n    doc: initialCode,\n    extensions: [basicSetup, oneDark,\n    // Theme\n    javascript(),\n    // Language mode\n    highlightActiveLine(), drawSelection(), bracketMatching(), syntaxHighlighting(), closeBrackets(), highlightSpecialChars(), autocompletion(), indentOnInput()]\n  });\n  const handleCodeChange = (editor, data, value) => {\n    setCode(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Code Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CodeMirror, {\n      value: code,\n      options: {\n        mode: 'javascript',\n        theme: 'one-dark',\n        // Use the imported theme name\n        lineNumbers: true,\n        autoCloseBrackets: true,\n        styleActiveLine: true,\n        highlightSelectionMatches: {\n          showToken: /\\w/\n        },\n        matchBrackets: true\n      },\n      onBeforeChange: handleCodeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CodeEditor, \"ZFV6bPVogXq7gKF6tM763Q/dBFY=\");\n_c = CodeEditor;\nexport default CodeEditor;\n\n/* \nimport React, { useEffect, useState, useRef } from 'react'\nimport { EditorState } from '@codemirror/state'\nimport { lineNumbers, EditorView, keymap, highlightActiveLine } from '@codemirror/view'\nimport { defaultKeymap } from '@codemirror/commands'\nimport { history, historyKeymap } from '@codemirror/history'\nimport { indentOnInput, foldGutter, foldKeymap, syntaxHighlighting } from '@codemirror/language'\nimport { bracketMatching } from '@codemirror/matchbrackets'\nimport { highlightActiveLineGutter } from '@codemirror/gutter'\nimport { defaultHighlightStyle } from '@codemirror/highlight'\nimport { javascript } from '@codemirror/lang-javascript'\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search'\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete'\nimport { lintKeymap } from '@codemirror/lint'\nimport { basicSetup } from 'codemirror'\nimport { crosshairCursor, drawSelection, dropCursor, highlightSpecialChars, rectangularSelection } from '@codemirror/view'\n\nconst Editor = () => {\n    const initialText = 'console.log(\"hello, world\")'\n    const targetElement = document.querySelector('#realtimeeditor')\n    const extensions = [lineNumbers(),\n    highlightActiveLineGutter(),\n    highlightSpecialChars(),\n    history(),\n    foldGutter(),\n    drawSelection(),\n    dropCursor(),\n    EditorState.allowMultipleSelections.of(true),\n    indentOnInput(),\n    syntaxHighlighting(defaultHighlightStyle, { fallback: true }),\n    bracketMatching(),\n    closeBrackets(),\n    autocompletion(),\n    rectangularSelection(),\n    crosshairCursor(),\n    highlightActiveLine(),\n    highlightSelectionMatches(),\n    keymap.of([\n        ...closeBracketsKeymap,\n        ...defaultKeymap,\n        ...searchKeymap,\n        ...historyKeymap,\n        ...foldKeymap,\n        ...completionKeymap,\n        ...lintKeymap,\n    ]),\n    javascript(),]\n    new EditorView({\n        parent: targetElement,\n        state: EditorState.create({\n            doc: initialText, extensions\n        }),\n    })\n    return <textarea id='realtimeeditor'></textarea>\n}\n\n\nexport default Editor\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","Controlled","CodeMirror","EditorState","basicSetup","javascript","oneDark","highlightActiveLine","drawSelection","bracketMatching","syntaxHighlighting","closeBrackets","highlightSpecialChars","autocompletion","indentOnInput","jsxDEV","_jsxDEV","CodeEditor","_s","initialCode","code","setCode","editorState","create","doc","extensions","handleCodeChange","editor","data","value","children","fileName","_jsxFileName","lineNumber","columnNumber","options","mode","theme","lineNumbers","autoCloseBrackets","styleActiveLine","highlightSelectionMatches","showToken","matchBrackets","onBeforeChange","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport { EditorState, basicSetup } from '@codemirror/state';\nimport { javascript } from '@codemirror/lang-javascript';\nimport { oneDark } from '@codemirror/theme-one-dark';\nimport { highlightActiveLine, drawSelection, bracketMatching, syntaxHighlighting, closeBrackets, highlightSpecialChars, autocompletion, indentOnInput } from '@codemirror/language';\n\n// Import CodeMirror styles\nimport 'codemirror/lib/codemirror.css';\n\nconst CodeEditor = () => {\n    const initialCode = 'console.log(\"Hello, CodeMirror!\");';\n    const [code, setCode] = useState(initialCode);\n\n    const editorState = EditorState.create({\n        doc: initialCode,\n        extensions: [\n            basicSetup,\n            oneDark, // Theme\n            javascript(), // Language mode\n            highlightActiveLine(),\n            drawSelection(),\n            bracketMatching(),\n            syntaxHighlighting(),\n            closeBrackets(),\n            highlightSpecialChars(),\n            autocompletion(),\n            indentOnInput(),\n        ],\n    });\n\n    const handleCodeChange = (editor, data, value) => {\n        setCode(value);\n    };\n\n    return (\n        <div>\n            <h2>Code Editor</h2>\n            <CodeMirror\n                value={code}\n                options={{\n                    mode: 'javascript',\n                    theme: 'one-dark', // Use the imported theme name\n                    lineNumbers: true,\n                    autoCloseBrackets: true,\n                    styleActiveLine: true,\n                    highlightSelectionMatches: { showToken: /\\w/ },\n                    matchBrackets: true,\n                }}\n                onBeforeChange={handleCodeChange}\n            />\n        </div>\n    );\n};\n\nexport default CodeEditor;\n\n\n\n\n/* \nimport React, { useEffect, useState, useRef } from 'react'\nimport { EditorState } from '@codemirror/state'\nimport { lineNumbers, EditorView, keymap, highlightActiveLine } from '@codemirror/view'\nimport { defaultKeymap } from '@codemirror/commands'\nimport { history, historyKeymap } from '@codemirror/history'\nimport { indentOnInput, foldGutter, foldKeymap, syntaxHighlighting } from '@codemirror/language'\nimport { bracketMatching } from '@codemirror/matchbrackets'\nimport { highlightActiveLineGutter } from '@codemirror/gutter'\nimport { defaultHighlightStyle } from '@codemirror/highlight'\nimport { javascript } from '@codemirror/lang-javascript'\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search'\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete'\nimport { lintKeymap } from '@codemirror/lint'\nimport { basicSetup } from 'codemirror'\nimport { crosshairCursor, drawSelection, dropCursor, highlightSpecialChars, rectangularSelection } from '@codemirror/view'\n\nconst Editor = () => {\n    const initialText = 'console.log(\"hello, world\")'\n    const targetElement = document.querySelector('#realtimeeditor')\n    const extensions = [lineNumbers(),\n    highlightActiveLineGutter(),\n    highlightSpecialChars(),\n    history(),\n    foldGutter(),\n    drawSelection(),\n    dropCursor(),\n    EditorState.allowMultipleSelections.of(true),\n    indentOnInput(),\n    syntaxHighlighting(defaultHighlightStyle, { fallback: true }),\n    bracketMatching(),\n    closeBrackets(),\n    autocompletion(),\n    rectangularSelection(),\n    crosshairCursor(),\n    highlightActiveLine(),\n    highlightSelectionMatches(),\n    keymap.of([\n        ...closeBracketsKeymap,\n        ...defaultKeymap,\n        ...searchKeymap,\n        ...historyKeymap,\n        ...foldKeymap,\n        ...completionKeymap,\n        ...lintKeymap,\n    ]),\n    javascript(),]\n    new EditorView({\n        parent: targetElement,\n        state: EditorState.create({\n            doc: initialText, extensions\n        }),\n    })\n    return <textarea id='realtimeeditor'></textarea>\n}\n\n\nexport default Editor\n\n\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,IAAIC,UAAU,QAAQ,mBAAmB;AAC5D,SAASC,WAAW,EAAEC,UAAU,QAAQ,mBAAmB;AAC3D,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,mBAAmB,EAAEC,aAAa,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,aAAa,EAAEC,qBAAqB,EAAEC,cAAc,EAAEC,aAAa,QAAQ,sBAAsB;;AAEnL;AACA,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,WAAW,GAAG,oCAAoC;EACxD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAACmB,WAAW,CAAC;EAE7C,MAAMG,WAAW,GAAGnB,WAAW,CAACoB,MAAM,CAAC;IACnCC,GAAG,EAAEL,WAAW;IAChBM,UAAU,EAAE,CACRrB,UAAU,EACVE,OAAO;IAAE;IACTD,UAAU,CAAC,CAAC;IAAE;IACdE,mBAAmB,CAAC,CAAC,EACrBC,aAAa,CAAC,CAAC,EACfC,eAAe,CAAC,CAAC,EACjBC,kBAAkB,CAAC,CAAC,EACpBC,aAAa,CAAC,CAAC,EACfC,qBAAqB,CAAC,CAAC,EACvBC,cAAc,CAAC,CAAC,EAChBC,aAAa,CAAC,CAAC;EAEvB,CAAC,CAAC;EAEF,MAAMY,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;IAC9CR,OAAO,CAACQ,KAAK,CAAC;EAClB,CAAC;EAED,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBlB,OAAA,CAACd,UAAU;MACP2B,KAAK,EAAET,IAAK;MACZe,OAAO,EAAE;QACLC,IAAI,EAAE,YAAY;QAClBC,KAAK,EAAE,UAAU;QAAE;QACnBC,WAAW,EAAE,IAAI;QACjBC,iBAAiB,EAAE,IAAI;QACvBC,eAAe,EAAE,IAAI;QACrBC,yBAAyB,EAAE;UAAEC,SAAS,EAAE;QAAK,CAAC;QAC9CC,aAAa,EAAE;MACnB,CAAE;MACFC,cAAc,EAAElB;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAChB,EAAA,CA3CID,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AA6ChB,eAAeA,UAAU;;AAKzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5DA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}