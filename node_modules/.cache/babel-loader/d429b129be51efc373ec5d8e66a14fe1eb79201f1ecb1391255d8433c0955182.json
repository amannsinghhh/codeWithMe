{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  socket\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    if (editorRef.current) {\n      const cm = CodeMirror(editorRef.current, {\n        // Your CodeMirror configuration options\n      });\n      cm.on('change', (instance, changeObj) => {\n        // Send the change to the server\n        socket.emit('editor-change', changeObj);\n      });\n\n      // Listen for incoming changes from the server\n      socket.on('editor-change', changeObj => {\n        // Apply the incoming change to the CodeMirror instance\n        cm.replaceRange(changeObj.text.join('\\n'), changeObj.from, changeObj.to);\n      });\n    }\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: editorRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n_s(Editor, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useRef","useEffect","useState","CodeMirror","jsxDEV","_jsxDEV","Editor","socket","_s","editorRef","current","cm","on","instance","changeObj","emit","replaceRange","text","join","from","to","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport CodeMirror from 'codemirror';\nimport 'codemirror/lib/codemirror.css';\n\nconst Editor = ({ socket }) => {\n    const editorRef = useRef(null);\n\n    useEffect(() => {\n        if (editorRef.current) {\n            const cm = CodeMirror(editorRef.current, {\n                // Your CodeMirror configuration options\n            });\n\n            cm.on('change', (instance, changeObj) => {\n                // Send the change to the server\n                socket.emit('editor-change', changeObj);\n            });\n\n            // Listen for incoming changes from the server\n            socket.on('editor-change', (changeObj) => {\n                // Apply the incoming change to the CodeMirror instance\n                cm.replaceRange(\n                    changeObj.text.join('\\n'),\n                    changeObj.from,\n                    changeObj.to\n                );\n            });\n        }\n    }, [socket]);\n\n    return <div ref={editorRef} />;\n};\n\nexport default Editor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,IAAIQ,SAAS,CAACC,OAAO,EAAE;MACnB,MAAMC,EAAE,GAAGR,UAAU,CAACM,SAAS,CAACC,OAAO,EAAE;QACrC;MAAA,CACH,CAAC;MAEFC,EAAE,CAACC,EAAE,CAAC,QAAQ,EAAE,CAACC,QAAQ,EAAEC,SAAS,KAAK;QACrC;QACAP,MAAM,CAACQ,IAAI,CAAC,eAAe,EAAED,SAAS,CAAC;MAC3C,CAAC,CAAC;;MAEF;MACAP,MAAM,CAACK,EAAE,CAAC,eAAe,EAAGE,SAAS,IAAK;QACtC;QACAH,EAAE,CAACK,YAAY,CACXF,SAAS,CAACG,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC,EACzBJ,SAAS,CAACK,IAAI,EACdL,SAAS,CAACM,EACd,CAAC;MACL,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ,oBAAOF,OAAA;IAAKgB,GAAG,EAAEZ;EAAU;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAACjB,EAAA,CA3BIF,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AA6BZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}