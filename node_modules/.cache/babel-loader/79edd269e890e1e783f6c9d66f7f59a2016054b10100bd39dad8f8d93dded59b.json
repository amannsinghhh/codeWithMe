{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\"; // Import Controlled version\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport ACTIONS from \"../action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  socketRef,\n  roomID\n}) => {\n  _s();\n  const [code, setCode] = useState(\"console.log('Start Writing!');\");\n  const [output, setOutput] = useState(\"\");\n  const handleChange = (editor, data, value) => {\n    setCode(value);\n    socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n      roomID,\n      code: value\n    });\n  };\n  const runCode = async () => {\n    try {\n      setOutput(\"Running...\");\n\n      // ...rest of your code\n    } catch (error) {\n      setOutput(\"Error: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CodeMirror, {\n      value: code,\n      onBeforeChange: (editor, data, value) => {\n        setCode(value);\n      },\n      options: {\n        mode: {\n          name: \"javascript\",\n          json: true\n        },\n        theme: \"material\",\n        lineNumbers: true,\n        autoCloseBrackets: true\n      },\n      editorDidMount: editor => {\n        editor.on(\"change\", (instance, changes) => {\n          const {\n            origin\n          } = changes;\n          const newCode = instance.getValue();\n          setCode(newCode);\n          if (origin !== \"setValue\") {\n            socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n              roomID,\n              code: newCode\n            });\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn runbtn\",\n      onClick: runCode,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"outputtxt\",\n      children: \"Output:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Editor, \"aJEmNyrk8NmkeaGHfLD88cfGzmM=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Controlled","CodeMirror","vscodeDark","javascript","ACTIONS","jsxDEV","_jsxDEV","Editor","socketRef","roomID","_s","code","setCode","output","setOutput","handleChange","editor","data","value","current","emit","CODE_CHANGE","runCode","error","message","children","onBeforeChange","options","mode","name","json","theme","lineNumbers","autoCloseBrackets","editorDidMount","on","instance","changes","origin","newCode","getValue","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\"; // Import Controlled version\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport ACTIONS from \"../action\";\n\nconst Editor = ({ socketRef, roomID }) => {\n    const [code, setCode] = useState(\"console.log('Start Writing!');\");\n    const [output, setOutput] = useState(\"\");\n\n    const handleChange = (editor, data, value) => {\n        setCode(value);\n        socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomID,\n            code: value,\n        });\n    };\n\n    const runCode = async () => {\n        try {\n            setOutput(\"Running...\");\n\n            // ...rest of your code\n\n        } catch (error) {\n            setOutput(\"Error: \" + error.message);\n        }\n    };\n\n    return (\n        <div>\n            <CodeMirror\n                value={code}\n                onBeforeChange={(editor, data, value) => {\n                    setCode(value);\n                }}\n                options={{\n                    mode: { name: \"javascript\", json: true },\n                    theme: \"material\",\n                    lineNumbers: true,\n                    autoCloseBrackets: true,\n                }}\n                editorDidMount={(editor) => {\n                    editor.on(\"change\", (instance, changes) => {\n                        const { origin } = changes;\n                        const newCode = instance.getValue();\n                        setCode(newCode);\n                        if (origin !== \"setValue\") {\n                            socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                                roomID,\n                                code: newCode,\n                            });\n                        }\n                    });\n                }}\n            />\n            <button className=\"btn runbtn\" onClick={runCode}>\n                Run\n            </button>\n            <h2 className=\"outputtxt\">Output:</h2>\n            <pre>{output}</pre>\n        </div>\n    );\n};\n\nexport default Editor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}