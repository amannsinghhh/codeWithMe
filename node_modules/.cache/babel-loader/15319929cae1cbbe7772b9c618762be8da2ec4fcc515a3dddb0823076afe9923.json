{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/pages/compiler.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport user from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport ACTIONS from '../action';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Compiler = () => {\n  _s();\n  const socketRef = useRef(null);\n  const location = useLocation();\n  useEffect(() => {\n    const init = async () => {\n      // socketRef.current = await initSocket();\n      // socketRef.current.emit(ACTIONS.JOIN, {\n      //     roomId,\n      //     username: location.state?.username,\n      // })\n    };\n    init();\n  }, []);\n  const [clients, setClients] = useState([{\n    socketId: 1,\n    username: 'aman'\n  }, {\n    socketId: 2,\n    username: 'am2an'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainblock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innersidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/logo1.png\",\n            alt: \"logo\",\n            className: \"logoimg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(\"client\", {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copybtn\",\n        children: \"Copy Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leavebtn\",\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorblock\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n_s(Compiler, \"YnwaZFW2lgt/Vgklfi0NmtvR6Oc=\", false, function () {\n  return [useLocation];\n});\n_c = Compiler;\nexport default Compiler;\nvar _c;\n$RefreshReg$(_c, \"Compiler\");","map":{"version":3,"names":["React","useState","useRef","useEffect","user","Editor","initSocket","ACTIONS","useLocation","jsxDEV","_jsxDEV","Compiler","_s","socketRef","location","init","clients","setClients","socketId","username","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","client","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/pages/compiler.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport user from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport ACTIONS from '../action';\nimport { useLocation } from 'react-router-dom'\nconst Compiler = () => {\n    const socketRef = useRef(null);\n    const location = useLocation();\n    useEffect(() => {\n        const init = async () => {\n            // socketRef.current = await initSocket();\n            // socketRef.current.emit(ACTIONS.JOIN, {\n            //     roomId,\n            //     username: location.state?.username,\n            // })\n        };\n        init();\n    }, []);\n    const [clients, setClients] = useState([\n        { socketId: 1, username: 'aman' },\n        { socketId: 2, username: 'am2an' },\n    ])\n    return <div className='mainblock'>\n        <div className='sidebar'>\n            <div className='innersidebar'>\n                <div className='logo'>\n                    <img src='/logo1.png' alt='logo' className='logoimg' />\n                </div>\n                <h3>Connected</h3>\n                <div className='clientsList'>\n                    {\n                        clients.map((client) => (\n                            <client key={client.socketId} username={client.username} />\n                        ))\n                    }\n                </div>\n            </div>\n            <button className='btn copybtn'>Copy Room ID</button>\n            <button className='btn leavebtn'>Leave</button>\n        </div>\n        <div className='editorblock'>\n            <Editor />\n        </div>\n    </div>\n};\n\nexport default Compiler;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}