{"ast":null,"code":"import { EditorView, ViewPlugin, BlockType, PluginField, Direction } from '@codemirror/view';\nimport { RangeSet, RangeValue } from '@codemirror/rangeset';\nimport { MapMode, Facet, combineConfig } from '@codemirror/state';\n\n/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/\nclass GutterMarker extends RangeValue {\n  /**\n  @internal\n  */\n  compare(other) {\n    return this == other || this.constructor == other.constructor && this.eq(other);\n  }\n  /**\n  Compare this marker to another marker of the same type.\n  */\n  eq(other) {\n    return false;\n  }\n  /**\n  Called if the marker has a `toDOM` method and its representation\n  was removed from a gutter.\n  */\n  destroy(dom) {}\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.toDOM = undefined;\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nGutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;\nGutterMarker.prototype.point = true;\n/**\nFacet used to add a class to all gutter elements for a given line.\nMarkers given to this facet should _only_ define an\n[`elementclass`](https://codemirror.net/6/docs/ref/#gutter.GutterMarker.elementClass), not a\n[`toDOM`](https://codemirror.net/6/docs/ref/#gutter.GutterMarker.toDOM) (or the marker will appear\nin all gutters for the line).\n*/\nconst gutterLineClass = /*@__PURE__*/Facet.define();\nconst defaults = {\n  class: \"\",\n  renderEmptyElements: false,\n  elementStyle: \"\",\n  markers: () => RangeSet.empty,\n  lineMarker: () => null,\n  lineMarkerChange: null,\n  initialSpacer: null,\n  updateSpacer: null,\n  domEventHandlers: {}\n};\nconst activeGutters = /*@__PURE__*/Facet.define();\n/**\nDefine an editor gutter. The order in which the gutters appear is\ndetermined by their extension priority.\n*/\nfunction gutter(config) {\n  return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-gutters\": {\n    display: \"flex\",\n    height: \"100%\",\n    boxSizing: \"border-box\",\n    left: 0,\n    zIndex: 200\n  },\n  \"&light .cm-gutters\": {\n    backgroundColor: \"#f5f5f5\",\n    color: \"#999\",\n    borderRight: \"1px solid #ddd\"\n  },\n  \"&dark .cm-gutters\": {\n    backgroundColor: \"#333338\",\n    color: \"#ccc\"\n  },\n  \".cm-gutter\": {\n    display: \"flex !important\",\n    flexDirection: \"column\",\n    flexShrink: 0,\n    boxSizing: \"border-box\",\n    minHeight: \"100%\",\n    overflow: \"hidden\"\n  },\n  \".cm-gutterElement\": {\n    boxSizing: \"border-box\"\n  },\n  \".cm-lineNumbers .cm-gutterElement\": {\n    padding: \"0 3px 0 5px\",\n    minWidth: \"20px\",\n    textAlign: \"right\",\n    whiteSpace: \"nowrap\"\n  },\n  \"&light .cm-activeLineGutter\": {\n    backgroundColor: \"#e2f2ff\"\n  },\n  \"&dark .cm-activeLineGutter\": {\n    backgroundColor: \"#222227\"\n  }\n});\nconst unfixGutters = /*@__PURE__*/Facet.define({\n  combine: values => values.some(x => x)\n});\n/**\nThe gutter-drawing plugin is automatically enabled when you add a\ngutter, but you can use this function to explicitly configure it.\n\nUnless `fixed` is explicitly set to `false`, the gutters are\nfixed, meaning they don't scroll along with the content\nhorizontally (except on Internet Explorer, which doesn't support\nCSS [`position:\nsticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).\n*/\nfunction gutters(config) {\n  let result = [gutterView, baseTheme];\n  if (config && config.fixed === false) result.push(unfixGutters.of(true));\n  return result;\n}\nconst gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.view = view;\n    this.prevViewport = view.viewport;\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"cm-gutters\";\n    this.dom.setAttribute(\"aria-hidden\", \"true\");\n    this.dom.style.minHeight = this.view.contentHeight + \"px\";\n    this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n    for (let gutter of this.gutters) this.dom.appendChild(gutter.dom);\n    this.fixed = !view.state.facet(unfixGutters);\n    if (this.fixed) {\n      // FIXME IE11 fallback, which doesn't support position: sticky,\n      // by using position: relative + event handlers that realign the\n      // gutter (or just force fixed=false on IE11?)\n      this.dom.style.position = \"sticky\";\n    }\n    this.syncGutters(false);\n    view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n  }\n  update(update) {\n    if (this.updateGutters(update)) {\n      // Detach during sync when the viewport changed significantly\n      // (such as during scrolling), since for large updates that is\n      // faster.\n      let vpA = this.prevViewport,\n        vpB = update.view.viewport;\n      let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);\n      this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);\n    }\n    if (update.geometryChanged) this.dom.style.minHeight = this.view.contentHeight + \"px\";\n    if (this.view.state.facet(unfixGutters) != !this.fixed) {\n      this.fixed = !this.fixed;\n      this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n    }\n    this.prevViewport = update.view.viewport;\n  }\n  syncGutters(detach) {\n    let after = this.dom.nextSibling;\n    if (detach) this.dom.remove();\n    let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);\n    let classSet = [];\n    let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));\n    for (let line of this.view.viewportLineBlocks) {\n      let text;\n      if (Array.isArray(line.type)) {\n        for (let b of line.type) if (b.type == BlockType.Text) {\n          text = b;\n          break;\n        }\n      } else {\n        text = line.type == BlockType.Text ? line : undefined;\n      }\n      if (!text) continue;\n      if (classSet.length) classSet = [];\n      advanceCursor(lineClasses, classSet, line.from);\n      for (let cx of contexts) cx.line(this.view, text, classSet);\n    }\n    for (let cx of contexts) cx.finish();\n    if (detach) this.view.scrollDOM.insertBefore(this.dom, after);\n  }\n  updateGutters(update) {\n    let prev = update.startState.facet(activeGutters),\n      cur = update.state.facet(activeGutters);\n    let change = update.docChanged || update.heightChanged || update.viewportChanged || !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);\n    if (prev == cur) {\n      for (let gutter of this.gutters) if (gutter.update(update)) change = true;\n    } else {\n      change = true;\n      let gutters = [];\n      for (let conf of cur) {\n        let known = prev.indexOf(conf);\n        if (known < 0) {\n          gutters.push(new SingleGutterView(this.view, conf));\n        } else {\n          this.gutters[known].update(update);\n          gutters.push(this.gutters[known]);\n        }\n      }\n      for (let g of this.gutters) {\n        g.dom.remove();\n        if (gutters.indexOf(g) < 0) g.destroy();\n      }\n      for (let g of gutters) this.dom.appendChild(g.dom);\n      this.gutters = gutters;\n    }\n    return change;\n  }\n  destroy() {\n    for (let view of this.gutters) view.destroy();\n    this.dom.remove();\n  }\n}, {\n  provide: /*@__PURE__*/PluginField.scrollMargins.from(value => {\n    if (value.gutters.length == 0 || !value.fixed) return null;\n    return value.view.textDirection == Direction.LTR ? {\n      left: value.dom.offsetWidth\n    } : {\n      right: value.dom.offsetWidth\n    };\n  })\n});\nfunction asArray(val) {\n  return Array.isArray(val) ? val : [val];\n}\nfunction advanceCursor(cursor, collect, pos) {\n  while (cursor.value && cursor.from <= pos) {\n    if (cursor.from == pos) collect.push(cursor.value);\n    cursor.next();\n  }\n}\nclass UpdateContext {\n  constructor(gutter, viewport, height) {\n    this.gutter = gutter;\n    this.height = height;\n    this.localMarkers = [];\n    this.i = 0;\n    this.cursor = RangeSet.iter(gutter.markers, viewport.from);\n  }\n  line(view, line, extraMarkers) {\n    if (this.localMarkers.length) this.localMarkers = [];\n    advanceCursor(this.cursor, this.localMarkers, line.from);\n    let localMarkers = extraMarkers.length ? this.localMarkers.concat(extraMarkers) : this.localMarkers;\n    let forLine = this.gutter.config.lineMarker(view, line, localMarkers);\n    if (forLine) localMarkers.unshift(forLine);\n    let gutter = this.gutter;\n    if (localMarkers.length == 0 && !gutter.config.renderEmptyElements) return;\n    let above = line.top - this.height;\n    if (this.i == gutter.elements.length) {\n      let newElt = new GutterElement(view, line.height, above, localMarkers);\n      gutter.elements.push(newElt);\n      gutter.dom.appendChild(newElt.dom);\n    } else {\n      gutter.elements[this.i].update(view, line.height, above, localMarkers);\n    }\n    this.height = line.bottom;\n    this.i++;\n  }\n  finish() {\n    let gutter = this.gutter;\n    while (gutter.elements.length > this.i) {\n      let last = gutter.elements.pop();\n      gutter.dom.removeChild(last.dom);\n      last.destroy();\n    }\n  }\n}\nclass SingleGutterView {\n  constructor(view, config) {\n    this.view = view;\n    this.config = config;\n    this.elements = [];\n    this.spacer = null;\n    this.dom = document.createElement(\"div\");\n    this.dom.className = \"cm-gutter\" + (this.config.class ? \" \" + this.config.class : \"\");\n    for (let prop in config.domEventHandlers) {\n      this.dom.addEventListener(prop, event => {\n        let line = view.lineBlockAtHeight(event.clientY - view.documentTop);\n        if (config.domEventHandlers[prop](view, line, event)) event.preventDefault();\n      });\n    }\n    this.markers = asArray(config.markers(view));\n    if (config.initialSpacer) {\n      this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);\n      this.dom.appendChild(this.spacer.dom);\n      this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n    }\n  }\n  update(update) {\n    let prevMarkers = this.markers;\n    this.markers = asArray(this.config.markers(update.view));\n    if (this.spacer && this.config.updateSpacer) {\n      let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n      if (updated != this.spacer.markers[0]) this.spacer.update(update.view, 0, 0, [updated]);\n    }\n    let vp = update.view.viewport;\n    return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) || (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);\n  }\n  destroy() {\n    for (let elt of this.elements) elt.destroy();\n  }\n}\nclass GutterElement {\n  constructor(view, height, above, markers) {\n    this.height = -1;\n    this.above = 0;\n    this.markers = [];\n    this.dom = document.createElement(\"div\");\n    this.update(view, height, above, markers);\n  }\n  update(view, height, above, markers) {\n    if (this.height != height) this.dom.style.height = (this.height = height) + \"px\";\n    if (this.above != above) this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n    if (!sameMarkers(this.markers, markers)) this.setMarkers(view, markers);\n  }\n  setMarkers(view, markers) {\n    let cls = \"cm-gutterElement\",\n      domPos = this.dom.firstChild;\n    for (let iNew = 0, iOld = 0;;) {\n      let skipTo = iOld,\n        marker = iNew < markers.length ? markers[iNew++] : null,\n        matched = false;\n      if (marker) {\n        let c = marker.elementClass;\n        if (c) cls += \" \" + c;\n        for (let i = iOld; i < this.markers.length; i++) if (this.markers[i].compare(marker)) {\n          skipTo = i;\n          matched = true;\n          break;\n        }\n      } else {\n        skipTo = this.markers.length;\n      }\n      while (iOld < skipTo) {\n        let next = this.markers[iOld++];\n        if (next.toDOM) {\n          next.destroy(domPos);\n          let after = domPos.nextSibling;\n          domPos.remove();\n          domPos = after;\n        }\n      }\n      if (!marker) break;\n      if (marker.toDOM) {\n        if (matched) domPos = domPos.nextSibling;else this.dom.insertBefore(marker.toDOM(view), domPos);\n      }\n      if (matched) iOld++;\n    }\n    this.dom.className = cls;\n    this.markers = markers;\n  }\n  destroy() {\n    this.setMarkers(null, []); // First argument not used unless creating markers\n  }\n}\n\nfunction sameMarkers(a, b) {\n  if (a.length != b.length) return false;\n  for (let i = 0; i < a.length; i++) if (!a[i].compare(b[i])) return false;\n  return true;\n}\n/**\nFacet used to provide markers to the line number gutter.\n*/\nconst lineNumberMarkers = /*@__PURE__*/Facet.define();\nconst lineNumberConfig = /*@__PURE__*/Facet.define({\n  combine(values) {\n    return combineConfig(values, {\n      formatNumber: String,\n      domEventHandlers: {}\n    }, {\n      domEventHandlers(a, b) {\n        let result = Object.assign({}, a);\n        for (let event in b) {\n          let exists = result[event],\n            add = b[event];\n          result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n        }\n        return result;\n      }\n    });\n  }\n});\nclass NumberMarker extends GutterMarker {\n  constructor(number) {\n    super();\n    this.number = number;\n  }\n  eq(other) {\n    return this.number == other.number;\n  }\n  toDOM() {\n    return document.createTextNode(this.number);\n  }\n}\nfunction formatNumber(view, number) {\n  return view.state.facet(lineNumberConfig).formatNumber(number, view.state);\n}\nconst lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({\n  class: \"cm-lineNumbers\",\n  renderEmptyElements: false,\n  markers(view) {\n    return view.state.facet(lineNumberMarkers);\n  },\n  lineMarker(view, line, others) {\n    if (others.some(m => m.toDOM)) return null;\n    return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));\n  },\n  lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),\n  initialSpacer(view) {\n    return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));\n  },\n  updateSpacer(spacer, update) {\n    let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));\n    return max == spacer.number ? spacer : new NumberMarker(max);\n  },\n  domEventHandlers: state.facet(lineNumberConfig).domEventHandlers\n}));\n/**\nCreate a line number gutter extension.\n*/\nfunction lineNumbers(config = {}) {\n  return [lineNumberConfig.of(config), gutters(), lineNumberGutter];\n}\nfunction maxLineNumber(lines) {\n  let last = 9;\n  while (last < lines) last = last * 10 + 9;\n  return last;\n}\nconst activeLineGutterMarker = /*@__PURE__*/new class extends GutterMarker {\n  constructor() {\n    super(...arguments);\n    this.elementClass = \"cm-activeLineGutter\";\n  }\n}();\nconst activeLineGutterHighlighter = /*@__PURE__*/gutterLineClass.compute([\"selection\"], state => {\n  let marks = [],\n    last = -1;\n  for (let range of state.selection.ranges) if (range.empty) {\n    let linePos = state.doc.lineAt(range.head).from;\n    if (linePos > last) {\n      last = linePos;\n      marks.push(activeLineGutterMarker.range(linePos));\n    }\n  }\n  return RangeSet.of(marks);\n});\n/**\nReturns an extension that adds a `cm-activeLineGutter` class to\nall gutter elements on the [active\nline](https://codemirror.net/6/docs/ref/#view.highlightActiveLine).\n*/\nfunction highlightActiveLineGutter() {\n  return activeLineGutterHighlighter;\n}\nexport { GutterMarker, gutter, gutterLineClass, gutters, highlightActiveLineGutter, lineNumberMarkers, lineNumbers };","map":{"version":3,"names":["EditorView","ViewPlugin","BlockType","PluginField","Direction","RangeSet","RangeValue","MapMode","Facet","combineConfig","GutterMarker","compare","other","constructor","eq","destroy","dom","prototype","elementClass","toDOM","undefined","mapMode","TrackBefore","startSide","endSide","point","gutterLineClass","define","defaults","class","renderEmptyElements","elementStyle","markers","empty","lineMarker","lineMarkerChange","initialSpacer","updateSpacer","domEventHandlers","activeGutters","gutter","config","gutters","of","Object","assign","baseTheme","display","height","boxSizing","left","zIndex","backgroundColor","color","borderRight","flexDirection","flexShrink","minHeight","overflow","padding","minWidth","textAlign","whiteSpace","unfixGutters","combine","values","some","x","result","gutterView","fixed","push","fromClass","view","prevViewport","viewport","document","createElement","className","setAttribute","style","contentHeight","state","facet","map","conf","SingleGutterView","appendChild","position","syncGutters","scrollDOM","insertBefore","contentDOM","update","updateGutters","vpA","vpB","vpOverlap","Math","min","to","max","from","geometryChanged","detach","after","nextSibling","remove","lineClasses","iter","classSet","contexts","UpdateContext","documentPadding","top","line","viewportLineBlocks","text","Array","isArray","type","b","Text","length","advanceCursor","cx","finish","prev","startState","cur","change","docChanged","heightChanged","viewportChanged","known","indexOf","g","provide","scrollMargins","value","textDirection","LTR","offsetWidth","right","asArray","val","cursor","collect","pos","next","localMarkers","i","extraMarkers","concat","forLine","unshift","above","elements","newElt","GutterElement","bottom","last","pop","removeChild","spacer","prop","addEventListener","event","lineBlockAtHeight","clientY","documentTop","preventDefault","cssText","prevMarkers","updated","vp","elt","marginTop","sameMarkers","setMarkers","cls","domPos","firstChild","iNew","iOld","skipTo","marker","matched","c","a","lineNumberMarkers","lineNumberConfig","formatNumber","String","exists","add","NumberMarker","number","createTextNode","lineNumberGutter","compute","others","m","doc","lineAt","maxLineNumber","lines","lineNumbers","activeLineGutterMarker","arguments","activeLineGutterHighlighter","marks","range","selection","ranges","linePos","head","highlightActiveLineGutter"],"sources":["/Users/amansingh/Desktop/CodeWithMe/node_modules/@codemirror/gutter/dist/index.js"],"sourcesContent":["import { EditorView, ViewPlugin, BlockType, PluginField, Direction } from '@codemirror/view';\nimport { RangeSet, RangeValue } from '@codemirror/rangeset';\nimport { MapMode, Facet, combineConfig } from '@codemirror/state';\n\n/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/\nclass GutterMarker extends RangeValue {\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    Compare this marker to another marker of the same type.\n    */\n    eq(other) { return false; }\n    /**\n    Called if the marker has a `toDOM` method and its representation\n    was removed from a gutter.\n    */\n    destroy(dom) { }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.toDOM = undefined;\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nGutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;\nGutterMarker.prototype.point = true;\n/**\nFacet used to add a class to all gutter elements for a given line.\nMarkers given to this facet should _only_ define an\n[`elementclass`](https://codemirror.net/6/docs/ref/#gutter.GutterMarker.elementClass), not a\n[`toDOM`](https://codemirror.net/6/docs/ref/#gutter.GutterMarker.toDOM) (or the marker will appear\nin all gutters for the line).\n*/\nconst gutterLineClass = /*@__PURE__*/Facet.define();\nconst defaults = {\n    class: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    lineMarkerChange: null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = /*@__PURE__*/Facet.define();\n/**\nDefine an editor gutter. The order in which the gutters appear is\ndetermined by their extension priority.\n*/\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutters\": {\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0,\n        zIndex: 200\n    },\n    \"&light .cm-gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#999\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"&dark .cm-gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    \".cm-gutter\": {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        overflow: \"hidden\"\n    },\n    \".cm-gutterElement\": {\n        boxSizing: \"border-box\"\n    },\n    \".cm-lineNumbers .cm-gutterElement\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    },\n    \"&light .cm-activeLineGutter\": {\n        backgroundColor: \"#e2f2ff\"\n    },\n    \"&dark .cm-activeLineGutter\": {\n        backgroundColor: \"#222227\"\n    }\n});\nconst unfixGutters = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\n/**\nThe gutter-drawing plugin is automatically enabled when you add a\ngutter, but you can use this function to explicitly configure it.\n\nUnless `fixed` is explicitly set to `false`, the gutters are\nfixed, meaning they don't scroll along with the content\nhorizontally (except on Internet Explorer, which doesn't support\nCSS [`position:\nsticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).\n*/\nfunction gutters(config) {\n    let result = [\n        gutterView,\n        baseTheme\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.prevViewport = view.viewport;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutters\";\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        this.syncGutters(false);\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (this.updateGutters(update)) {\n            // Detach during sync when the viewport changed significantly\n            // (such as during scrolling), since for large updates that is\n            // faster.\n            let vpA = this.prevViewport, vpB = update.view.viewport;\n            let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);\n            this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);\n        }\n        if (update.geometryChanged)\n            this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (this.view.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n        this.prevViewport = update.view.viewport;\n    }\n    syncGutters(detach) {\n        let after = this.dom.nextSibling;\n        if (detach)\n            this.dom.remove();\n        let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);\n        let classSet = [];\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));\n        for (let line of this.view.viewportLineBlocks) {\n            let text;\n            if (Array.isArray(line.type)) {\n                for (let b of line.type)\n                    if (b.type == BlockType.Text) {\n                        text = b;\n                        break;\n                    }\n            }\n            else {\n                text = line.type == BlockType.Text ? line : undefined;\n            }\n            if (!text)\n                continue;\n            if (classSet.length)\n                classSet = [];\n            advanceCursor(lineClasses, classSet, line.from);\n            for (let cx of contexts)\n                cx.line(this.view, text, classSet);\n        }\n        for (let cx of contexts)\n            cx.finish();\n        if (detach)\n            this.view.scrollDOM.insertBefore(this.dom, after);\n    }\n    updateGutters(update) {\n        let prev = update.startState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged ||\n            !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters) {\n                g.dom.remove();\n                if (gutters.indexOf(g) < 0)\n                    g.destroy();\n            }\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        for (let view of this.gutters)\n            view.destroy();\n        this.dom.remove();\n    }\n}, {\n    provide: /*@__PURE__*/PluginField.scrollMargins.from(value => {\n        if (value.gutters.length == 0 || !value.fixed)\n            return null;\n        return value.view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nfunction asArray(val) { return (Array.isArray(val) ? val : [val]); }\nfunction advanceCursor(cursor, collect, pos) {\n    while (cursor.value && cursor.from <= pos) {\n        if (cursor.from == pos)\n            collect.push(cursor.value);\n        cursor.next();\n    }\n}\nclass UpdateContext {\n    constructor(gutter, viewport, height) {\n        this.gutter = gutter;\n        this.height = height;\n        this.localMarkers = [];\n        this.i = 0;\n        this.cursor = RangeSet.iter(gutter.markers, viewport.from);\n    }\n    line(view, line, extraMarkers) {\n        if (this.localMarkers.length)\n            this.localMarkers = [];\n        advanceCursor(this.cursor, this.localMarkers, line.from);\n        let localMarkers = extraMarkers.length ? this.localMarkers.concat(extraMarkers) : this.localMarkers;\n        let forLine = this.gutter.config.lineMarker(view, line, localMarkers);\n        if (forLine)\n            localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        let above = line.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, line.height, above, localMarkers);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            gutter.elements[this.i].update(view, line.height, above, localMarkers);\n        }\n        this.height = line.bottom;\n        this.i++;\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i) {\n            let last = gutter.elements.pop();\n            gutter.dom.removeChild(last.dom);\n            last.destroy();\n        }\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutter\" + (this.config.class ? \" \" + this.config.class : \"\");\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let line = view.lineBlockAtHeight(event.clientY - view.documentTop);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = asArray(config.markers(view));\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = asArray(this.config.markers(update.view));\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated]);\n        }\n        let vp = update.view.viewport;\n        return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) ||\n            (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);\n    }\n    destroy() {\n        for (let elt of this.elements)\n            elt.destroy();\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers) {\n        this.height = -1;\n        this.above = 0;\n        this.markers = [];\n        this.dom = document.createElement(\"div\");\n        this.update(view, height, above, markers);\n    }\n    update(view, height, above, markers) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (!sameMarkers(this.markers, markers))\n            this.setMarkers(view, markers);\n    }\n    setMarkers(view, markers) {\n        let cls = \"cm-gutterElement\", domPos = this.dom.firstChild;\n        for (let iNew = 0, iOld = 0;;) {\n            let skipTo = iOld, marker = iNew < markers.length ? markers[iNew++] : null, matched = false;\n            if (marker) {\n                let c = marker.elementClass;\n                if (c)\n                    cls += \" \" + c;\n                for (let i = iOld; i < this.markers.length; i++)\n                    if (this.markers[i].compare(marker)) {\n                        skipTo = i;\n                        matched = true;\n                        break;\n                    }\n            }\n            else {\n                skipTo = this.markers.length;\n            }\n            while (iOld < skipTo) {\n                let next = this.markers[iOld++];\n                if (next.toDOM) {\n                    next.destroy(domPos);\n                    let after = domPos.nextSibling;\n                    domPos.remove();\n                    domPos = after;\n                }\n            }\n            if (!marker)\n                break;\n            if (marker.toDOM) {\n                if (matched)\n                    domPos = domPos.nextSibling;\n                else\n                    this.dom.insertBefore(marker.toDOM(view), domPos);\n            }\n            if (matched)\n                iOld++;\n        }\n        this.dom.className = cls;\n        this.markers = markers;\n    }\n    destroy() {\n        this.setMarkers(null, []); // First argument not used unless creating markers\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/**\nFacet used to provide markers to the line number gutter.\n*/\nconst lineNumberMarkers = /*@__PURE__*/Facet.define();\nconst lineNumberConfig = /*@__PURE__*/Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM() { return document.createTextNode(this.number); }\n}\nfunction formatNumber(view, number) {\n    return view.state.facet(lineNumberConfig).formatNumber(number, view.state);\n}\nconst lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({\n    class: \"cm-lineNumbers\",\n    renderEmptyElements: false,\n    markers(view) { return view.state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.some(m => m.toDOM))\n            return null;\n        return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));\n    },\n    lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),\n    initialSpacer(view) {\n        return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));\n    },\n    updateSpacer(spacer, update) {\n        let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    },\n    domEventHandlers: state.facet(lineNumberConfig).domEventHandlers\n}));\n/**\nCreate a line number gutter extension.\n*/\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        gutters(),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\nconst activeLineGutterMarker = /*@__PURE__*/new class extends GutterMarker {\n    constructor() {\n        super(...arguments);\n        this.elementClass = \"cm-activeLineGutter\";\n    }\n};\nconst activeLineGutterHighlighter = /*@__PURE__*/gutterLineClass.compute([\"selection\"], state => {\n    let marks = [], last = -1;\n    for (let range of state.selection.ranges)\n        if (range.empty) {\n            let linePos = state.doc.lineAt(range.head).from;\n            if (linePos > last) {\n                last = linePos;\n                marks.push(activeLineGutterMarker.range(linePos));\n            }\n        }\n    return RangeSet.of(marks);\n});\n/**\nReturns an extension that adds a `cm-activeLineGutter` class to\nall gutter elements on the [active\nline](https://codemirror.net/6/docs/ref/#view.highlightActiveLine).\n*/\nfunction highlightActiveLineGutter() {\n    return activeLineGutterHighlighter;\n}\n\nexport { GutterMarker, gutter, gutterLineClass, gutters, highlightActiveLineGutter, lineNumberMarkers, lineNumbers };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}