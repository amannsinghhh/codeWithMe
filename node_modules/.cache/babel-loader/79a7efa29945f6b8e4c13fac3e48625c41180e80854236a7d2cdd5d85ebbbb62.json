{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { EditorState } from '@codemirror/state';\nimport { EditorView, keymap, highlightActiveLine } from '@codemirror/view';\nimport { defaultKeymap } from '@codemirror/commands';\nimport { history, historyKeymap } from '@codemirror/history';\nimport { indentOnInput, foldGutter, foldKeymap, syntaxHighlighting } from '@codemirror/language';\nimport { bracketMatching } from '@codemirror/matchbrackets';\nimport { lineNumbers, highlightActiveLineGutter } from '@codemirror/gutter';\nimport { defaultHighlightStyle } from '@codemirror/highlight';\nimport { javascript } from '@codemirror/lang-javascript';\nimport CodeMirror from 'codemirror';\nimport { basicSetup, minimalSetup } from \"codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { Type } from 'react';\nimport { func } from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = () => {\n  const initialText = 'console.log(\"hello, world\")';\n  const targetElement = document.querySelector('realtimeeditor');\n  new EditorView({\n    doc: initialText,\n    extensions: [basicSetup, javascript()],\n    parent: targetElement\n  });\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"realtimeeditor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n_c = Editor;\nexport default Editor;\n\n/*\nuseEffect(() => {\n        async function init() {\n            let myView = new EditorView(document.getElementById('realtimeeditor'), {\n                doc: \"hello\",\n                extensions: [keymap.of(defaultKeymap)],\n                parent: document.body,\n                mode: { name: 'javascript', json: true },\n                theme: 'dracula',\n                autoCloseTags: true,\n                autoCloseBracket: true,\n                lineNumbers: true,\n            })\n\n        }\n        init();\n    }, []);\n\n*/\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useState","useRef","EditorState","EditorView","keymap","highlightActiveLine","defaultKeymap","history","historyKeymap","indentOnInput","foldGutter","foldKeymap","syntaxHighlighting","bracketMatching","lineNumbers","highlightActiveLineGutter","defaultHighlightStyle","javascript","CodeMirror","basicSetup","minimalSetup","autocompletion","closeBrackets","closeBracketsKeymap","completionKeymap","Type","func","jsxDEV","_jsxDEV","Editor","initialText","targetElement","document","querySelector","doc","extensions","parent","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { EditorState } from '@codemirror/state'\nimport { EditorView, keymap, highlightActiveLine } from '@codemirror/view'\nimport { defaultKeymap } from '@codemirror/commands'\nimport { history, historyKeymap } from '@codemirror/history'\nimport { indentOnInput, foldGutter, foldKeymap, syntaxHighlighting } from '@codemirror/language'\nimport { bracketMatching } from '@codemirror/matchbrackets'\nimport { lineNumbers, highlightActiveLineGutter } from '@codemirror/gutter'\nimport { defaultHighlightStyle } from '@codemirror/highlight'\nimport { javascript } from '@codemirror/lang-javascript'\nimport CodeMirror from 'codemirror'\nimport { basicSetup, minimalSetup } from \"codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete'\n\nimport { Type } from 'react'\nimport { func } from 'prop-types'\nconst Editor = () => {\n    const initialText = 'console.log(\"hello, world\")'\n    const targetElement = document.querySelector('realtimeeditor')\n    new EditorView({\n        doc: initialText,\n        extensions: [\n            basicSetup,\n            javascript(),\n        ],\n        parent: targetElement,\n    })\n    return <textarea id='realtimeeditor'></textarea>\n}\n\nexport default Editor\n\n\n\n\n\n/*\nuseEffect(() => {\n        async function init() {\n            let myView = new EditorView(document.getElementById('realtimeeditor'), {\n                doc: \"hello\",\n                extensions: [keymap.of(defaultKeymap)],\n                parent: document.body,\n                mode: { name: 'javascript', json: true },\n                theme: 'dracula',\n                autoCloseTags: true,\n                autoCloseBracket: true,\n                lineNumbers: true,\n            })\n\n        }\n        init();\n    }, []);\n\n*/"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,kBAAkB;AAC1E,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,OAAO,EAAEC,aAAa,QAAQ,qBAAqB;AAC5D,SAASC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,kBAAkB,QAAQ,sBAAsB;AAChG,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,WAAW,EAAEC,yBAAyB,QAAQ,oBAAoB;AAC3E,SAASC,qBAAqB,QAAQ,uBAAuB;AAC7D,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,UAAU,EAAEC,YAAY,QAAQ,YAAY;AACrD,SAASC,cAAc,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,gBAAgB,QAAQ,0BAA0B;AAE/G,SAASC,IAAI,QAAQ,OAAO;AAC5B,SAASC,IAAI,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB,MAAMC,WAAW,GAAG,6BAA6B;EACjD,MAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;EAC9D,IAAI9B,UAAU,CAAC;IACX+B,GAAG,EAAEJ,WAAW;IAChBK,UAAU,EAAE,CACRhB,UAAU,EACVF,UAAU,CAAC,CAAC,CACf;IACDmB,MAAM,EAAEL;EACZ,CAAC,CAAC;EACF,oBAAOH,OAAA;IAAUS,EAAE,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AACpD,CAAC;AAAAC,EAAA,GAZKb,MAAM;AAcZ,eAAeA,MAAM;;AAMrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}