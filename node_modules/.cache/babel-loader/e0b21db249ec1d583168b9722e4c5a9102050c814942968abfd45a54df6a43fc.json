{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/pages/compiler.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport ACTIONS from '../action';\nimport { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Compiler = () => {\n  _s();\n  const socket = 'http://localhost:5000';\n  const socketRef = useRef(null);\n  const location = useLocation();\n  const reactNavigator = useNavigate();\n  const {\n    roomId\n  } = useParams();\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    const init = async () => {\n      var _location$state;\n      socketRef.current = initSocket();\n      socketRef.current.on('connect_error', err => handleErrors(err));\n      socketRef.current.on('connect_failed', err => handleErrors(err));\n      function handleErrors(e) {\n        console.log('socket error', e);\n      }\n      socketRef.current.emit(ACTIONS.JOIN, {\n        roomId,\n        username: (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.username\n      });\n      socketRef.current.on(ACTIONS.JOINED, ({\n        clients,\n        username,\n        socketId\n      }) => {\n        var _location$state2;\n        if (username !== ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.username)) {\n          toast.success(`${username} joined the room`);\n        }\n        setClients(clients);\n      });\n      socketRef.current.on(ACTIONS.DISCONNECTED, ({\n        socketId\n      }) => {\n        toast.success(`Someone left`);\n        setClients(prev => {\n          return prev.filter(client => client.socketId !== socketId);\n        });\n      });\n    };\n    init();\n    return () => {\n      socketRef.run.disconnect();\n      socketRef.current.off(ACTIONS.JOINED);\n      socketRef.current.off(ACTIONS.DISCONNECTED);\n    };\n  }, []);\n  if (!location.state) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainblock\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innersidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/logo1.png\",\n            alt: \"logo\",\n            className: \"logoimg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsList\",\n          children: clients.map(client => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username\n          }, client.socketId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn copybtn\",\n        children: \"Copy Room ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn leavebtn\",\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorblock\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 12\n  }, this);\n};\n_s(Compiler, \"Z8OaxESox3cOyTSAoA7rC28bbas=\", false, function () {\n  return [useLocation, useNavigate, useParams];\n});\n_c = Compiler;\nexport default Compiler;\nvar _c;\n$RefreshReg$(_c, \"Compiler\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Client","Editor","initSocket","ACTIONS","useLocation","useNavigate","Navigate","useParams","toast","jsxDEV","_jsxDEV","Compiler","_s","socket","socketRef","location","reactNavigator","roomId","clients","setClients","init","_location$state","current","on","err","handleErrors","e","console","log","emit","JOIN","username","state","JOINED","socketId","_location$state2","success","DISCONNECTED","prev","filter","client","run","disconnect","off","to","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","map","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/pages/compiler.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport Client from '../components/Client';\nimport Editor from '../components/Editor';\nimport { initSocket } from '../socket';\nimport ACTIONS from '../action';\nimport { useLocation, useNavigate, Navigate, useParams } from 'react-router-dom'\nimport { toast } from 'react-hot-toast';\nconst Compiler = () => {\n    const socket = ('http://localhost:5000');\n    const socketRef = useRef(null);\n    const location = useLocation();\n    const reactNavigator = useNavigate();\n    const { roomId } = useParams();\n    const [clients, setClients] = useState([\n\n    ]);\n\n    useEffect(() => {\n        const init = async () => {\n            socketRef.current = initSocket();\n            socketRef.current.on('connect_error', (err) => handleErrors(err));\n            socketRef.current.on('connect_failed', (err) => handleErrors(err));\n\n            function handleErrors(e) {\n                console.log('socket error', e);\n            }\n            socketRef.current.emit(ACTIONS.JOIN, {\n                roomId,\n                username: location.state?.username,\n            });\n\n            socketRef.current.on(ACTIONS.JOINED, ({ clients, username, socketId }) => {\n                if (username !== location.state?.username) {\n                    toast.success(`${username} joined the room`)\n                }\n                setClients(clients);\n            })\n            socketRef.current.on(ACTIONS.DISCONNECTED, ({ socketId }) => {\n                toast.success(`Someone left`)\n                setClients((prev) => {\n                    return prev.filter(\n                        (client) => client.socketId !== socketId\n                    );\n                })\n            })\n        };\n        init();\n        return () => {\n            socketRef.run.disconnect();\n            socketRef.current.off(ACTIONS.JOINED);\n            socketRef.current.off(ACTIONS.DISCONNECTED);\n        }\n    }, []);\n\n    if (!location.state) {\n        return < Navigate to=\"/\" />;\n    }\n\n    return <div className='mainblock'>\n        <div className='sidebar'>\n            <div className='innersidebar'>\n                <div className='logo'>\n                    <img src='/logo1.png' alt='logo' className='logoimg' />\n                </div>\n                <h3>Connected</h3>\n                <div className='clientsList'>\n                    {\n                        clients.map((client) => (\n                            <Client key={client.socketId} username={client.username} />\n                        ))\n                    }\n                </div>\n            </div>\n            <button className='btn copybtn'>Copy Room ID</button>\n            <button className='btn leavebtn'>Leave</button>\n        </div>\n        <div className='editorblock'>\n            <Editor />\n        </div>\n    </div>\n};\n\nexport default Compiler;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}