{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from '@codemirror/lang-javascript';\nimport { EditorState } from '@codemirror/state';\nimport axios from \"axios\";\nimport ACTIONS from \"../action\";\nimport socketIOClient from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  roomID\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const [code, setCode] = useState(\"console.log('Start Writing!');\");\n  const [output, setOutput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const socketRef = useRef();\n  useEffect(() => {\n    // Establish socket connection\n    socketRef.current = socketIOClient(\"your_socket_server_url\");\n\n    // Listen for code changes from other users\n    socketRef.current.on(\"code_change\", ({\n      code\n    }) => {\n      if (code !== null) {\n        editorRef.current.editor.setValue(code);\n      }\n    });\n\n    // Listen for chat messages\n    socketRef.current.on(\"chat_message\", message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, []);\n  const handleCodeChange = (editor, data, value) => {\n    setCode(value);\n    socketRef.current.emit(\"code_change\", {\n      roomID,\n      code: value\n    });\n  };\n  const handleSendMessage = () => {\n    if (newMessage.trim() !== \"\") {\n      socketRef.current.emit(\"chat_message\", {\n        roomID,\n        message: newMessage\n      });\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CodeMirror, {\n      ref: editorRef,\n      value: code,\n      height: \"650px\",\n      theme: vscodeDark,\n      options: {\n        mode: {\n          name: \"javascript\",\n          json: true\n        },\n        theme: \"material\",\n        lineNumbers: true,\n        autocompletion: true,\n        closeBrackets: true\n      },\n      onChange: handleCodeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Editor, \"VE36VdCDY4EScoxiQTrcBsnMjvY=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","CodeMirror","autocompletion","closeBrackets","closeBracketsKeymap","completionKeymap","vscodeDark","javascript","EditorState","axios","ACTIONS","socketIOClient","jsxDEV","_jsxDEV","Editor","roomID","_s","editorRef","code","setCode","output","setOutput","messages","setMessages","newMessage","setNewMessage","socketRef","current","on","editor","setValue","message","prevMessages","disconnect","handleCodeChange","data","value","emit","handleSendMessage","trim","children","ref","height","theme","options","mode","name","json","lineNumbers","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","type","placeholder","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete'\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from '@codemirror/lang-javascript';\nimport { EditorState } from '@codemirror/state';\nimport axios from \"axios\";\nimport ACTIONS from \"../action\";\nimport socketIOClient from \"socket.io-client\";\n\nconst Editor = ({ roomID }) => {\n    const editorRef = useRef(null);\n    const [code, setCode] = useState(\"console.log('Start Writing!');\");\n    const [output, setOutput] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [newMessage, setNewMessage] = useState(\"\");\n    const socketRef = useRef();\n\n    useEffect(() => {\n        // Establish socket connection\n        socketRef.current = socketIOClient(\"your_socket_server_url\");\n\n        // Listen for code changes from other users\n        socketRef.current.on(\"code_change\", ({ code }) => {\n            if (code !== null) {\n                editorRef.current.editor.setValue(code);\n            }\n        });\n\n        // Listen for chat messages\n        socketRef.current.on(\"chat_message\", (message) => {\n            setMessages((prevMessages) => [...prevMessages, message]);\n        });\n\n        return () => {\n            socketRef.current.disconnect();\n        };\n    }, []);\n\n    const handleCodeChange = (editor, data, value) => {\n        setCode(value);\n        socketRef.current.emit(\"code_change\", {\n            roomID,\n            code: value,\n        });\n    };\n\n    const handleSendMessage = () => {\n        if (newMessage.trim() !== \"\") {\n            socketRef.current.emit(\"chat_message\", {\n                roomID,\n                message: newMessage,\n            });\n            setNewMessage(\"\");\n        }\n    };\n\n    return (\n        <div>\n            <CodeMirror\n                ref={editorRef}\n                value={code}\n                height=\"650px\"\n                theme={vscodeDark}\n                options={{\n                    mode: { name: \"javascript\", json: true },\n                    theme: \"material\",\n                    lineNumbers: true,\n                    autocompletion: true,\n                    closeBrackets: true,\n                }}\n                onChange={handleCodeChange}\n            />\n            <div className=\"chat-container\">\n                <div className=\"chat-messages\">\n                    {messages.map((message, index) => (\n                        <div key={index} className=\"chat-message\">\n                            {message}\n                        </div>\n                    ))}\n                </div>\n                <div className=\"chat-input\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Type your message...\"\n                        value={newMessage}\n                        onChange={(e) => setNewMessage(e.target.value)}\n                    />\n                    <button onClick={handleSendMessage}>Send</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Editor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}