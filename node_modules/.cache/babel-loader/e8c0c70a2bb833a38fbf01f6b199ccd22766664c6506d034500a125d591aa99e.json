{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from '@codemirror/lang-javascript';\nimport { EditorState } from '@codemirror/state';\nimport axios from \"axios\";\nimport ACTIONS from \"../action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  socketRef,\n  roomID,\n  onCodeChange\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const [code, setCode] = useState(\"console.log('Start Writing!');\");\n  const [output, setOutput] = useState(\"\");\n  useEffect(() => {\n    if (socketRef.current) {\n      socketRef.current.on(ACTIONS.CODE_CHANGE, ({\n        code\n      }) => {\n        if (code !== null) {\n          editorRef.current.editor.setValue(code); // Update the editor content\n        }\n      });\n    }\n  }, [socketRef.current]);\n  const handleChange = (editor, data, value) => {\n    setCode(value);\n    socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n      roomID,\n      code: value\n    });\n  };\n  const runCode = async () => {\n    // ... (your existing runCode logic)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CodeMirror, {\n      ref: editorRef,\n      value: code,\n      height: \"650px\",\n      theme: vscodeDark,\n      options: {\n        mode: {\n          name: 'javascript',\n          json: true\n        },\n        theme: 'material',\n        lineNumbers: true,\n        autocompletion: true,\n        autocloseBrackets: true,\n        extraKeys: {\n          'Ctrl-Space': 'autocomplete',\n          'Cmd-Space': 'autocomplete'\n        }\n      },\n      onBeforeChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Editor, \"tTCrtAkZpcWsMCCI4TAQKz1MGcc=\");\n_c = Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","CodeMirror","autocompletion","closeBrackets","closeBracketsKeymap","completionKeymap","vscodeDark","javascript","EditorState","axios","ACTIONS","jsxDEV","_jsxDEV","Editor","socketRef","roomID","onCodeChange","_s","editorRef","code","setCode","output","setOutput","current","on","CODE_CHANGE","editor","setValue","handleChange","data","value","emit","runCode","children","ref","height","theme","options","mode","name","json","lineNumbers","autocloseBrackets","extraKeys","onBeforeChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete'\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from '@codemirror/lang-javascript';\nimport { EditorState } from '@codemirror/state';\nimport axios from \"axios\";\nimport ACTIONS from \"../action\";\n\n\nconst Editor = ({ socketRef, roomID, onCodeChange }) => {\n    const editorRef = useRef(null);\n    const [code, setCode] = useState(\"console.log('Start Writing!');\");\n    const [output, setOutput] = useState(\"\");\n\n    useEffect(() => {\n        if (socketRef.current) {\n            socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n                if (code !== null) {\n                    editorRef.current.editor.setValue(code); // Update the editor content\n                }\n            });\n        }\n    }, [socketRef.current]);\n\n    const handleChange = (editor, data, value) => {\n        setCode(value);\n        socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomID,\n            code: value,\n        });\n    };\n\n    const runCode = async () => {\n        // ... (your existing runCode logic)\n    };\n\n    return (\n        <div>\n            <CodeMirror\n                ref={editorRef}\n                value={code}\n                height=\"650px\"\n                theme={vscodeDark}\n                options={{\n                    mode: { name: 'javascript', json: true },\n                    theme: 'material',\n                    lineNumbers: true,\n                    autocompletion: true,\n                    autocloseBrackets: true,\n                    extraKeys: {\n                        'Ctrl-Space': 'autocomplete',\n                        'Cmd-Space': 'autocomplete',\n                    },\n                }}\n                onBeforeChange={handleChange}\n            />\n            {/* ... (rest of your component) */}\n        </div>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,SAASC,cAAc,EAAEC,aAAa,EAAEC,mBAAmB,EAAEC,gBAAgB,QAAQ,0BAA0B;AAC/G,SAASC,UAAU,QAAQ,8BAA8B;AACzD,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,SAAS;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAMC,SAAS,GAAGnB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACoB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,gCAAgC,CAAC;EAClE,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAExCF,SAAS,CAAC,MAAM;IACZ,IAAIgB,SAAS,CAACS,OAAO,EAAE;MACnBT,SAAS,CAACS,OAAO,CAACC,EAAE,CAACd,OAAO,CAACe,WAAW,EAAE,CAAC;QAAEN;MAAK,CAAC,KAAK;QACpD,IAAIA,IAAI,KAAK,IAAI,EAAE;UACfD,SAAS,CAACK,OAAO,CAACG,MAAM,CAACC,QAAQ,CAACR,IAAI,CAAC,CAAC,CAAC;QAC7C;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACL,SAAS,CAACS,OAAO,CAAC,CAAC;EAEvB,MAAMK,YAAY,GAAGA,CAACF,MAAM,EAAEG,IAAI,EAAEC,KAAK,KAAK;IAC1CV,OAAO,CAACU,KAAK,CAAC;IACdhB,SAAS,CAACS,OAAO,CAACQ,IAAI,CAACrB,OAAO,CAACe,WAAW,EAAE;MACxCV,MAAM;MACNI,IAAI,EAAEW;IACV,CAAC,CAAC;EACN,CAAC;EAED,MAAME,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB;EAAA,CACH;EAED,oBACIpB,OAAA;IAAAqB,QAAA,eACIrB,OAAA,CAACX,UAAU;MACPiC,GAAG,EAAEhB,SAAU;MACfY,KAAK,EAAEX,IAAK;MACZgB,MAAM,EAAC,OAAO;MACdC,KAAK,EAAE9B,UAAW;MAClB+B,OAAO,EAAE;QACLC,IAAI,EAAE;UAAEC,IAAI,EAAE,YAAY;UAAEC,IAAI,EAAE;QAAK,CAAC;QACxCJ,KAAK,EAAE,UAAU;QACjBK,WAAW,EAAE,IAAI;QACjBvC,cAAc,EAAE,IAAI;QACpBwC,iBAAiB,EAAE,IAAI;QACvBC,SAAS,EAAE;UACP,YAAY,EAAE,cAAc;UAC5B,WAAW,EAAE;QACjB;MACJ,CAAE;MACFC,cAAc,EAAEhB;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAlDIJ,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}