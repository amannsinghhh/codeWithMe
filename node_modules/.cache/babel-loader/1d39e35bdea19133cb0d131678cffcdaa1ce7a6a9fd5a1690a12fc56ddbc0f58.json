{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport CodeMirror from 'codemirror'; // Changed import name\nimport ACTIONS from '../Actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  socketRef,\n  roomId,\n  onCodeChange\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  useEffect(() => {\n    async function init() {\n      editorRef.current = CodeMirror.fromTextArea(\n      // Changed import name\n      document.getElementById('realtimeEditor'), {\n        mode: {\n          name: 'javascript',\n          json: true\n        },\n        theme: 'dracula',\n        autoCloseTags: true,\n        autoCloseBrackets: true,\n        lineNumbers: true\n      });\n      editorRef.current.on('change', (instance, changes) => {\n        const {\n          origin\n        } = changes;\n        const code = instance.getValue();\n        onCodeChange(code);\n        if (origin !== 'setValue') {\n          socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n            roomId,\n            code\n          });\n        }\n      });\n    }\n    init();\n  }, []);\n  useEffect(() => {\n    const handleCodeChange = ({\n      code\n    }) => {\n      if (code !== null) {\n        editorRef.current.setValue(code);\n      }\n    };\n    if (socketRef.current) {\n      socketRef.current.on(ACTIONS.CODE_CHANGE, handleCodeChange);\n    }\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.off(ACTIONS.CODE_CHANGE, handleCodeChange);\n      }\n    };\n  }, [socketRef.current]);\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: \"realtimeEditor\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n_s(Editor, \"ueqoO+5gVAT6IRBF08iN84bYr2g=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","CodeMirror","ACTIONS","jsxDEV","_jsxDEV","Editor","socketRef","roomId","onCodeChange","_s","editorRef","init","current","fromTextArea","document","getElementById","mode","name","json","theme","autoCloseTags","autoCloseBrackets","lineNumbers","on","instance","changes","origin","code","getValue","emit","CODE_CHANGE","handleCodeChange","setValue","off","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport CodeMirror from 'codemirror'; // Changed import name\nimport ACTIONS from '../Actions';\n\nconst Editor = ({ socketRef, roomId, onCodeChange }) => {\n    const editorRef = useRef(null);\n\n    useEffect(() => {\n        async function init() {\n            editorRef.current = CodeMirror.fromTextArea( // Changed import name\n                document.getElementById('realtimeEditor'),\n                {\n                    mode: { name: 'javascript', json: true },\n                    theme: 'dracula',\n                    autoCloseTags: true,\n                    autoCloseBrackets: true,\n                    lineNumbers: true,\n                }\n            );\n\n            editorRef.current.on('change', (instance, changes) => {\n                const { origin } = changes;\n                const code = instance.getValue();\n                onCodeChange(code);\n                if (origin !== 'setValue') {\n                    socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                        roomId,\n                        code,\n                    });\n                }\n            });\n        }\n        init();\n    }, []);\n\n    useEffect(() => {\n        const handleCodeChange = ({ code }) => {\n            if (code !== null) {\n                editorRef.current.setValue(code);\n            }\n        };\n\n        if (socketRef.current) {\n            socketRef.current.on(ACTIONS.CODE_CHANGE, handleCodeChange);\n        }\n\n        return () => {\n            if (socketRef.current) {\n                socketRef.current.off(ACTIONS.CODE_CHANGE, handleCodeChange);\n            }\n        };\n    }, [socketRef.current]);\n\n    return <textarea id=\"realtimeEditor\"></textarea>;\n};\n\nexport default Editor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY,CAAC,CAAC;AACrC,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,SAAS;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,eAAeY,IAAIA,CAAA,EAAG;MAClBD,SAAS,CAACE,OAAO,GAAGX,UAAU,CAACY,YAAY;MAAE;MACzCC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,EACzC;QACIC,IAAI,EAAE;UAAEC,IAAI,EAAE,YAAY;UAAEC,IAAI,EAAE;QAAK,CAAC;QACxCC,KAAK,EAAE,SAAS;QAChBC,aAAa,EAAE,IAAI;QACnBC,iBAAiB,EAAE,IAAI;QACvBC,WAAW,EAAE;MACjB,CACJ,CAAC;MAEDZ,SAAS,CAACE,OAAO,CAACW,EAAE,CAAC,QAAQ,EAAE,CAACC,QAAQ,EAAEC,OAAO,KAAK;QAClD,MAAM;UAAEC;QAAO,CAAC,GAAGD,OAAO;QAC1B,MAAME,IAAI,GAAGH,QAAQ,CAACI,QAAQ,CAAC,CAAC;QAChCpB,YAAY,CAACmB,IAAI,CAAC;QAClB,IAAID,MAAM,KAAK,UAAU,EAAE;UACvBpB,SAAS,CAACM,OAAO,CAACiB,IAAI,CAAC3B,OAAO,CAAC4B,WAAW,EAAE;YACxCvB,MAAM;YACNoB;UACJ,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN;IACAhB,IAAI,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACZ,MAAMgC,gBAAgB,GAAGA,CAAC;MAAEJ;IAAK,CAAC,KAAK;MACnC,IAAIA,IAAI,KAAK,IAAI,EAAE;QACfjB,SAAS,CAACE,OAAO,CAACoB,QAAQ,CAACL,IAAI,CAAC;MACpC;IACJ,CAAC;IAED,IAAIrB,SAAS,CAACM,OAAO,EAAE;MACnBN,SAAS,CAACM,OAAO,CAACW,EAAE,CAACrB,OAAO,CAAC4B,WAAW,EAAEC,gBAAgB,CAAC;IAC/D;IAEA,OAAO,MAAM;MACT,IAAIzB,SAAS,CAACM,OAAO,EAAE;QACnBN,SAAS,CAACM,OAAO,CAACqB,GAAG,CAAC/B,OAAO,CAAC4B,WAAW,EAAEC,gBAAgB,CAAC;MAChE;IACJ,CAAC;EACL,CAAC,EAAE,CAACzB,SAAS,CAACM,OAAO,CAAC,CAAC;EAEvB,oBAAOR,OAAA;IAAU8B,EAAE,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAW,CAAC;AACpD,CAAC;AAAC7B,EAAA,CAlDIJ,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAoDZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}