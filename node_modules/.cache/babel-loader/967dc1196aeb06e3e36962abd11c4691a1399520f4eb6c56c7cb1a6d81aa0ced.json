{"ast":null,"code":"var _jsxFileName = \"/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from '@codemirror/lang-javascript';\nimport { EditorState } from '@codemirror/state';\nimport axios from \"axios\";\nimport ACTIONS from \"../action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = ({\n  socketRef,\n  roomID\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const [code, setCode] = useState(\"console.log('Start Writing!');\");\n  const [output, setOutput] = useState(\"\");\n  useEffect(() => {\n    if (editorRef.current) {\n      const editorInstance = editorRef.current.editor;\n      const view = editorInstance.view;\n      const handleChange = changeObj => {\n        const newCode = editorInstance.getValue();\n        socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n          roomID,\n          code: newCode\n        });\n      };\n      view.dom.addEventListener(\"change\", handleChange);\n      socketRef.current.on(ACTIONS.CODE_CHANGE, ({\n        code\n      }) => {\n        if (code !== null) {\n          editorInstance.setValue(code);\n        }\n      });\n      return () => {\n        view.dom.removeEventListener(\"change\", handleChange);\n      };\n    }\n  }, [socketRef.current]);\n  const runCode = async () => {\n    try {\n      setOutput(\"Running...\");\n      const response = await axios.post(\"https://runkit.io/api/run/1.0.0\", {\n        code\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setOutput(response.data);\n    } catch (error) {\n      setOutput(\"Error: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CodeMirror, {\n      ref: editorRef,\n      value: code,\n      height: \"650px\",\n      theme: vscodeDark,\n      options: {\n        mode: {\n          name: \"javascript\",\n          json: true\n        },\n        theme: \"material\",\n        lineNumbers: true,\n        autocompletion: true,\n        closeBrackets: true\n      },\n      onChange: (editor, data, value) => {\n        setCode(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn runbtn\",\n      onClick: runCode,\n      children: \"Run\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"outputtxt\",\n      children: \"Output:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(Editor, \"tTCrtAkZpcWsMCCI4TAQKz1MGcc=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","CodeMirror","autocompletion","closeBrackets","closeBracketsKeymap","completionKeymap","vscodeDark","javascript","EditorState","axios","ACTIONS","jsxDEV","_jsxDEV","Editor","socketRef","roomID","_s","editorRef","code","setCode","output","setOutput","current","editorInstance","editor","view","handleChange","changeObj","newCode","getValue","emit","CODE_CHANGE","dom","addEventListener","on","setValue","removeEventListener","runCode","response","post","headers","data","error","message","children","ref","value","height","theme","options","mode","name","json","lineNumbers","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/amansingh/Desktop/CodeWithMe/codewithme/src/components/Editor.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useState } from \"react\";\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { autocompletion, closeBrackets, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete'\nimport { vscodeDark } from \"@uiw/codemirror-theme-vscode\";\nimport { javascript } from '@codemirror/lang-javascript';\nimport { EditorState } from '@codemirror/state';\nimport axios from \"axios\";\nimport ACTIONS from \"../action\";\n\n\nconst Editor = ({ socketRef, roomID }) => {\n    const editorRef = useRef(null);\n    const [code, setCode] = useState(\"console.log('Start Writing!');\");\n    const [output, setOutput] = useState(\"\");\n\n    useEffect(() => {\n        if (editorRef.current) {\n            const editorInstance = editorRef.current.editor;\n            const view = editorInstance.view;\n\n            const handleChange = (changeObj) => {\n                const newCode = editorInstance.getValue();\n                socketRef.current.emit(ACTIONS.CODE_CHANGE, {\n                    roomID,\n                    code: newCode,\n                });\n            };\n\n            view.dom.addEventListener(\"change\", handleChange);\n\n            socketRef.current.on(ACTIONS.CODE_CHANGE, ({ code }) => {\n                if (code !== null) {\n                    editorInstance.setValue(code);\n                }\n            });\n\n            return () => {\n                view.dom.removeEventListener(\"change\", handleChange);\n            };\n        }\n    }, [socketRef.current]);\n\n    const runCode = async () => {\n        try {\n            setOutput(\"Running...\");\n\n            const response = await axios.post(\n                \"https://runkit.io/api/run/1.0.0\",\n                { code },\n                {\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n\n            setOutput(response.data);\n        } catch (error) {\n            setOutput(\"Error: \" + error.message);\n        }\n    };\n\n    return (\n        <div>\n            <CodeMirror\n                ref={editorRef}\n                value={code}\n                height=\"650px\"\n                theme={vscodeDark}\n                options={{\n                    mode: { name: \"javascript\", json: true },\n                    theme: \"material\",\n                    lineNumbers: true,\n                    autocompletion: true,\n                    closeBrackets: true,\n                }}\n                onChange={(editor, data, value) => {\n                    setCode(value);\n                }}\n            />\n            <button className=\"btn runbtn\" onClick={runCode}>\n                Run\n            </button>\n            <h2 className=\"outputtxt\">Output:</h2>\n            <pre>{output}</pre>\n        </div>\n    );\n};\n\nexport default Editor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}